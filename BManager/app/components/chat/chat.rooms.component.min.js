"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var chat_poll_request_group_object_1=require("../../objects/chat/chat.poll.request.group.object"),chat_poll_request_object_1=require("../../objects/chat/chat.poll.request.object"),chat_scroll_handler_object_1=require("../../objects/chat/chat.scroll.handler.object"),ChatRoomsComponent=function(){function ChatRoomsComponent(chatService,$timeout){this.chatService=chatService,this.$timeout=$timeout,this.chatRooms={}}return Object.defineProperty(ChatRoomsComponent.prototype,"currUser",{get:function(){return this.parent.currUser},enumerable:!0,configurable:!0}),ChatRoomsComponent.prototype.loadConversation=function(){var _this=this;this.selectedRoom&&this.selectedRoom.waitLoadConversation.then(function(){_this.chatConversation=_this.selectedRoom.roomConversation,_this.onLoadConversationSuccess()})},ChatRoomsComponent.prototype.startPollingUpdates=function(){this.isPollingCycleRunning=!0,this.pollUpdates()},ChatRoomsComponent.prototype.stopPollingUpdates=function(){this.isPollingCycleRunning=!1},ChatRoomsComponent.prototype.pollUpdates=function(){var _this=this,roomsPromises=[],groupPoll=new chat_poll_request_group_object_1.ChatPollRequestGroupObject,_loop_1=function(roomName){if(this_1.chatRooms.hasOwnProperty(roomName)){var chRoom_1=this_1.chatRooms[roomName],chPromise=chRoom_1.waitLoadConversation.then(function(){groupPoll.data.push(new chat_poll_request_object_1.ChatPollRequestObject(chRoom_1.department,chRoom_1.lastMsgID))});roomsPromises.push(chPromise)}},this_1=this;for(var roomName in this.chatRooms)_loop_1(roomName);Promise.all(roomsPromises).then(function(){_this.chatService.longPoll(groupPoll).then(function(data){_this.onPollResponse(data)})})},ChatRoomsComponent.prototype.onPollResponse=function(data){var _this=this;data&&data.forEach(function(chPollResponse,ind,arr){var roomName=chPollResponse.department.name;_this.chatRooms[roomName]&&_this.chatRooms[roomName].addMessages(chPollResponse.msgs)}),this.isPollingCycleRunning&&this.pollUpdates()},ChatRoomsComponent.prototype.sendMessage=function(source,msg){this.selectedRoom&&this.selectedRoom.sendMessage(source,msg)},ChatRoomsComponent.prototype.onSelected=function(chatRoom){this.selectedRoom&&(this.selectedRoom.isSelected=!1),this.chatRooms[chatRoom]&&(this.selectedRoom=this.chatRooms[chatRoom],this.selectedRoom.isSelected=!0),this.loadConversation()},ChatRoomsComponent.prototype.onLoadConversationSuccess=function(){this.parent&&this.parent.isChatOpened&&this.selectedRoom&&this.selectedRoom.isStickyBottom&&this.scrollToBottom(this.selectedRoom.roomName)},ChatRoomsComponent.prototype.onVisibilityStateChange=function(newState){newState&&this.selectedRoom&&this.selectedRoom.isStickyBottom&&this.scrollToBottom(this.selectedRoom.roomName)},ChatRoomsComponent.prototype.getChatConversationBoxElement=function(){return angular.element(document.querySelector("#divChatConversation"))},ChatRoomsComponent.prototype.scrollToBottom=function(chatRoom){this.chatScrollHandler.scrollToBottom()},ChatRoomsComponent.prototype.registerRoom=function(chatRoomName,chatRoom){return!this.chatRooms[chatRoomName]&&(this.chatRooms[chatRoomName]=chatRoom,!0)},ChatRoomsComponent.prototype.$onInit=function(){this.parent&&this.parent.registerChatRoomsHandler(this)},ChatRoomsComponent.prototype.$postLink=function(){var target=this.getChatConversationBoxElement()[0];this.chatScrollHandler=new chat_scroll_handler_object_1.ChatScrollHandlerObject(this.$timeout,target),this.startPollingUpdates()},ChatRoomsComponent.prototype.$onDestroy=function(){this.chatScrollHandler&&this.chatScrollHandler.onDestroy(),this.stopPollingUpdates()},ChatRoomsComponent}();exports.chatRoomsComponent={controller:ChatRoomsComponent,controllerAs:"vm",require:{parent:"^chatBox"},transclude:!0,template:'<div id="divChatRooms" class="chat-room-tabs">\n                    <div ng-transclude style="display: table-row;"></div>\n               </div>\n               <div id="divChatConversation" class="chat-room-conversation">\n                   <chat-msg ng-repeat="msg in vm.chatConversation track by $index" msg="msg" curr-user="vm.currUser">\n                   </chat-msg>\n               </div>'};